syntax = "proto3";
package terra.classictax.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "terra/classictax/v1beta1/classictax.proto";

option go_package = "github.com/classic-terra/core/v2/x/classictax/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries all parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/terra/classictax/v1beta1/params";
  }

  rpc TaxRate(QueryTaxRateRequest) returns (QueryTaxRateResponse){
    option (google.api.http).get = "/terra/classictax/v1beta1/taxrate";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryTaxRateRequest is the request type for the Query/Rate RPC method.
message QueryTaxRateRequest {}

// QueryTaxRateResponse is the response type for the Query/Rate RPC method.
message QueryTaxRateResponse {
  string tax_rate = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
}
