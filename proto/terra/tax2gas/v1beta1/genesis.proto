syntax = "proto3";
package terra.tax2gas.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";

option go_package = "github.com/classic-terra/core/v3/x/tax2gas/types";

message Params {
  option (gogoproto.goproto_stringer) = true;
  option (amino.name)                 = "terra/x/tax2gas/Params";

  repeated cosmos.base.v1beta1.DecCoin gas_prices = 1 [
    (gogoproto.moretags)   = "yaml:\"gas_prices\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty)   = true
  ];

  string burn_tax_rate = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  bool enabled = 3;

  // bypass_min_fee_msg_types defines a list of message type urls
  // that are free of fee charge.
  repeated string bypass_min_fee_msg_types = 4 [
    (gogoproto.jsontag) = "bypass_min_fee_msg_types,omitempty",
    (gogoproto.moretags) = "yaml:\"bypass_min_fee_msg_types\""
  ];

  // max_total_bypass_min_fee_msg_gas_usage defines the total maximum gas usage
  // allowed for a transaction containing only messages of types in bypass_min_fee_msg_types
  // to bypass fee charge.
  uint64 max_total_bypass_min_fee_msg_gas_usage = 5;
}

// GenesisState defines the tax2gas module's genesis state.
message GenesisState {
  // params is the container of tax2gas parameters.
  Params params = 1 [(gogoproto.nullable) = false];
}